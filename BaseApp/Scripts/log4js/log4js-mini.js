function Log(n, t, i) { var r = Log.WARN, f = Log.writeLogger, u = !1; this.setPrefix = function (n) { u = n != "undefined" ? n : !1 }; this.setLogger = function (n) { n != "undefined" && (f = n) }; this.setLevel = function (n) { n != "undefined" && typeof n == "number" ? r = n : n != "undefined" && (r = n == "debug" ? Log.DEBUG : n == "info" ? Log.INFO : n == "error" ? Log.ERROR : n == "fatal" ? Log.FATAL : n == "warn" ? Log.WARN : Log.NONE) }; this.getPrefix = function () { return u }; this.getLogger = function () { return f }; this.getLevel = function () { return r }; n != "undefined" && this.setLevel(n); t != "undefined" && this.setLogger(t); i != "undefined" && this.setPrefix(i) } Log.prototype.debug = function (n) { this.getLevel() <= Log.DEBUG && this._log(n, "DEBUG", this) }; Log.prototype.info = function (n) { this.getLevel() <= Log.INFO && this._log(n, "INFO", this) }; Log.prototype.warn = function (n) { this.getLevel() <= Log.WARN && this._log(n, "WARN", this) }; Log.prototype.error = function (n) { this.getLevel() <= Log.ERROR && this._log(n, "ERROR", this) }; Log.prototype.fatal = function (n) { this.getLevel() <= Log.FATAL && this._log(n, "FATAL", this) }; Log.prototype._log = function (n, t, i) { this.getPrefix() ? this.getLogger()(this.getPrefix() + " - " + n, t, i) : this.getLogger()(n, t, i) }; Log.DEBUG = 1; Log.INFO = 2; Log.WARN = 3; Log.ERROR = 4; Log.FATAL = 5; Log.NONE = 6; Log.alertLogger = function (n, t) { alert(t + " - " + n) }; Log.writeLogger = function (n, t) { document.writeln(t + "&nbsp;-&nbsp;" + n + "<br/>") }; Log.consoleLogger = function (n, t, i) { window.console ? window.console.log(t + " - " + n) : Log.popupLogger(n, t, i) }; Log.popupLogger = function (n, t, i) { var e, o, a; if (!i.popupBlocker) { if (!i._window || !i._window.document) { if (i._window = window.open("", "logger_popup_window", "width=420,height=320,scrollbars=1,status=0,toolbars=0,resizable=1"), !i._window) { i.popupBlocker = !0; alert("You have a popup window manager blocking the log4js log popup display.\n\nThis must be disabled to properly see logged events."); return } i._window.document.getElementById("loggerTable") || (i._window.document.writeln("<table width='100%' id='loggerTable'><tr><th align='left'>Time<\/th><th width='100%' colspan='2' align='left'>Message<\/th><\/tr><\/table>"), i._window.document.close()) } var l = i._window.document.getElementById("loggerTable"), h = l.insertRow(-1), u = h.insertCell(-1), c = h.insertCell(-1), f = h.insertCell(-1), r = new Date, s = r.getHours(); s < 10 && (s = "0" + s); e = r.getMinutes(); e < 10 && (e = "0" + e); o = r.getSeconds(); o < 10 && (o = "0" + o); a = r.getMonth() + 1 + "/" + r.getDate() + "/" + r.getFullYear() + "&nbsp;-&nbsp;" + s + ":" + e + ":" + o; u.style.fontSize = "8pt"; u.style.fontWeight = "bold"; u.style.paddingRight = "6px"; c.style.fontSize = "8pt"; f.style.fontSize = "8pt"; f.style.whiteSpace = "nowrap"; f.style.width = "100%"; l.rows.length % 2 == 0 && (u.style.backgroundColor = "#eeeeee", c.style.backgroundColor = "#eeeeee", f.style.backgroundColor = "#eeeeee"); u.innerHTML = a; c.innerHTML = t; f.innerHTML = n } }; Log.dumpObject = function (n, t) { var i, r, u; if (t || (t = ""), !(t.length > 20)) { i = "{\n"; for (r in n) i += t + r + ":", u = typeof n[r], u = u.toLowerCase(), i += u == "object" ? Log.dumpObject(n[r], t + "----") : n[r], i += "\n"; return i + (t + "}") } };